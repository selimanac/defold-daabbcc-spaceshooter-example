local g = require("scripts.global")

local button
local shield_progress
local life_progress

local timer_sc
local timer_mi

local shield_hit = 10
local now = 0
local elapsed = 0

local minutes = 0
local seconds = 0

local math_floor = math.floor
local string_format = string.format

function init(self)
    msg.post(".", "acquire_input_focus")

    g.hud_url = msg.url(".")
    button = gui.get_node("btn_pause")
    shield_progress = gui.get_node("shield_progress")
    life_progress = gui.get_node("life_progress")

    timer_sc = gui.get_node("timer_sc")
    timer_mi = gui.get_node("timer_mi")

    g.shield_v = gui.get_size(shield_progress)
    g.life_v = gui.get_size(life_progress)

    now = socket.gettime()
end

local function take_damage(self)
    if g.shield_v.x > 0 then
        g.shield_v.x = g.shield_v.x - shield_hit
        if g.shield_v.x < 0 then
            g.shield_v.x = 0
        end
        gui.set_size(shield_progress, g.shield_v)
    elseif g.life_v.x > 0 then

        g.life_v.x = g.life_v.x - shield_hit
        if g.life_v.x < 0 then
            g.life_v.x = 0
        end
        gui.set_size(life_progress, g.life_v)
    end
end

local function collect(self)
    if g.shield_v.x < 150 then
        g.shield_v.x = g.shield_v.x + 20
    end
    if g.shield_v.x > 150 then
        g.shield_v.x = 150
    end
    gui.set_size(shield_progress, g.shield_v)
end

local function getDate1(sec)
    minutes = math_floor((sec % 3600) / 60)
    seconds = math_floor(sec % 60)
    return minutes, seconds
end

local function printDate(m, s)
    g.elapsed_time_m = string_format("%02d", m)
    g.elapsed_time_s = string_format("%02d", s)
    gui.set_text(timer_sc, g.elapsed_time_s)
    gui.set_text(timer_mi, g.elapsed_time_m)
end

function update(self, dt)
    elapsed = socket.gettime() - now
    printDate(getDate1(elapsed))
end

function on_message(self, message_id, message, sender)
    if message_id == hash("take_damage") then
        take_damage(self)
    end
    if message_id == hash("collect") then
        collect(self)
    end

end

function on_input(self, action_id, action)
    if action_id == hash("mouse_click") and action.pressed then -- <2>
        if gui.pick_node(button, action.x, action.y) then -- <5>
            g.pause_game()
        end
    end
end
